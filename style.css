// Welcome Notification
const welcomeNotification = document.getElementById('welcomeNotification');
const countdownElement = document.getElementById('countdown');

// Show notification when page loads
window.onload = function() {
    setTimeout(() => {
        welcomeNotification.classList.add('show');
        startCountdown();
    }, 1000);
};

// Close notification
function closeNotification() {
    welcomeNotification.classList.remove('show');
}

// Auto close after 60 seconds
function startCountdown() {
    let seconds = 60;
    const countdownInterval = setInterval(() => {
        seconds--;
        countdownElement.textContent = seconds;
        
        if (seconds <= 0) {
            clearInterval(countdownInterval);
            closeNotification();
        }
    }, 1000);
}

// Auth System
const registerBtn = document.getElementById('registerBtn');
const loginBtn = document.getElementById('loginBtn');
const registerModal = document.getElementById('registerModal');
const loginModal = document.getElementById('loginModal');
const authButtons = document.getElementById('authButtons');
const userInfo = document.getElementById('userInfo');
const usernameDisplay = document.getElementById('usernameDisplay');
const balanceDisplay = document.getElementById('balance');

// Open Register Modal
registerBtn.addEventListener('click', () => {
    registerModal.style.display = 'block';
});

// Open Login Modal
loginBtn.addEventListener('click', () => {
    loginModal.style.display = 'block';
});

// Close Modal
function closeModal(modalId) {
    document.getElementById(modalId).style.display = 'none';
}

// Switch between Login and Register
function showLogin() {
    registerModal.style.display = 'none';
    loginModal.style.display = 'block';
}

function showRegister() {
    loginModal.style.display = 'none';
    registerModal.style.display = 'block';
}

// Register Form
document.getElementById('registerForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const username = document.getElementById('username').value;
    const password = document.getElementById('password').value;
    const confirmPassword = document.getElementById('confirmPassword').value;
    
    if (password !== confirmPassword) {
        alert('Mật khẩu không khớp!');
        return;
    }
    
    // Save user to localStorage
    localStorage.setItem('currentUser', JSON.stringify({
        username: username,
        password: password,
        balance: 0
    }));
    
    // Update UI
    updateUserInfo(username, 0);
    closeModal('registerModal');
    alert('Đăng ký thành công!');
});

// Login Form
document.getElementById('loginForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const username = document.getElementById('loginUsername').value;
    const password = document.getElementById('loginPassword').value;
    
    const userData = JSON.parse(localStorage.getItem('currentUser'));
    
    if (userData && username === userData.username && password === userData.password) {
        updateUserInfo(userData.username, userData.balance);
        closeModal('loginModal');
        alert('Đăng nhập thành công!');
    } else {
        alert('Tên đăng nhập hoặc mật khẩu không đúng!');
    }
});

// Update User Info
function updateUserInfo(username, balance) {
    usernameDisplay.textContent = username;
    balanceDisplay.textContent = balance;
    userInfo.style.display = 'block';
    authButtons.style.display = 'none';
}

// Check if user is logged in
function checkLoggedIn() {
    const userData = JSON.parse(localStorage.getItem('currentUser'));
    if (userData) {
        updateUserInfo(userData.username, userData.balance);
    }
}

// Product Details
const productDetails = {
    1: {
        title: "Gói Cơ Bản - 50.000đ",
        content: `
            <p><strong>Tác dụng:</strong></p>
            <ul>
                <li>100k 1 năm</li>
                <li>Hướng dẫn cài đầy đủ, không hiểu thì hỏi</li>
                <li>All rank, all map, siêu nhạy thích hợp bắn phòng hoặc kèo</li>
                <li>ADR và iOS cài app không lo bị check</li>
                <li>Tăng nhạy 70%, máy càng khỏe càng nhạy, fix rung tâm, fix lag</li>
                <li>Không phải aim, hack, data khóa acc</li>
                <li>Cài được iOS lẫn Android</li>
            </ul>
            <p><strong>Lưu ý:</strong> Sản phẩm không liên quan đến hack hay phần mềm bất hợp pháp</p>
        `
    },
    2: {
        title: "Gói Nâng Cao - 100.000đ",
        content: `
            <p><strong>Tác dụng:</strong></p>
            <ul>
                <li>100k 1 năm</li>
                <li>Hướng dẫn cài đầy đủ, không hiểu thì hỏi</li>
                <li>All rank, all map, siêu nhạy thích hợp bắn phòng hoặc kèo</li>
                <li>ADR và iOS cài app không lo bị check</li>
                <li>Tăng nhạy 90%, máy càng khỏe càng nhạy, fix rung tâm, fix lag, có aimlock sẵn</li>
                <li>Không phải aim, hack, data khóa acc, ae xem trong vd có thể thấy đoạn mình check tâm</li>
                <li>Cài được iOS lẫn Android</li>
            </ul>
            <p><strong>Ưu đãi:</strong> Những ae nào trước đó mua reg 50k của mình rồi thì nếu muốn nâng lên bản này chỉ mất 50k thôi nhé. Đây là bản nâng cấp, x2 tác dụng, nhưng ae nào không có điều kiện vẫn có thể mua bản 50k để chơi vẫn ok nhé.</p>
        `
    }
};

// Show Product Detail
function showDetail(productId) {
    const detail = productDetails[productId];
    document.getElementById('detailTitle').textContent = detail.title;
    document.getElementById('detailContent').innerHTML = detail.content;
    document.getElementById('detailModal').style.display = 'block';
}

// Snow Effect
function createSnow() {
    const canvas = document.getElementById('snowCanvas');
    const ctx = canvas.getContext('2d');
    
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    
    const snowflakes = [];
    const snowflakeCount = 100;
    
    for (let i = 0; i < snowflakeCount; i++) {
        snowflakes.push({
            x: Math.random() * canvas.width,
            y: Math.random() * canvas.height,
            radius: Math.random() * 3 + 1,
            speed: Math.random() * 2 + 1,
            opacity: Math.random()
        });
    }
    
    function drawSnowflakes() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';
        
        snowflakes.forEach(flake => {
            ctx.beginPath();
            ctx.arc(flake.x, flake.y, flake.radius, 0, Math.PI * 2);
            ctx.fill();
            
            flake.y += flake.speed;
            
            if (flake.y > canvas.height) {
                flake.y = 0;
                flake.x = Math.random() * canvas.width;
            }
        });
        
        requestAnimationFrame(drawSnowflakes);
    }
    
    drawSnowflakes();
    
    window.addEventListener('resize', () => {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
    });
}

// Initialize everything
document.addEventListener('DOMContentLoaded', function() {
    checkLoggedIn();
    createSnow();
});
